reading python file...
Line 1, indent: 0, instruction: #proram
Line 2, indent: 0, instruction: def goToBeginningOfBoard():
Line 3, indent: 1, instruction: if testIfICanProceed():
Line 4, indent: 2, instruction: fd()
Line 5, indent: 2, instruction: goToBeginningOfBoard()
Line 6, indent: 1, instruction: else:
Line 7, indent: 2, instruction: return
Line 8, indent: 1, instruction: 
Line 9, indent: 0, instruction: def fillThisRowWithEggs():
Line 10, indent: 1, instruction: if testIfICanProceed():
Line 11, indent: 2, instruction: layEgg()
Line 12, indent: 2, instruction: fd()
Line 13, indent: 2, instruction: fillThisRowWithEggs()
Line 14, indent: 1, instruction: else:
Line 15, indent: 2, instruction: layEgg()
Line 16, indent: 2, instruction: return
Line 17, indent: 0, instruction: 
Line 18, indent: 0, instruction: def repeatThisUntilBoardFull():
Line 19, indent: 1, instruction: if turtledirection=="^" :
Line 20, indent: 2, instruction: fillThisRowWithEggs()
Line 21, indent: 2, instruction: rt()
Line 22, indent: 2, instruction: fd()
Line 23, indent: 2, instruction: rt()
Line 24, indent: 2, instruction: 
Line 25, indent: 1, instruction: else:
Line 26, indent: 2, instruction: fd(H-1)
Line 27, indent: 2, instruction: lt()
Line 28, indent: 2, instruction: if turtledirection==">" :
Line 29, indent: 3, instruction: if not testIfICanProceed():
Line 30, indent: 4, instruction: end()
Line 31, indent: 2, instruction: fd()
Line 32, indent: 2, instruction: lt()
Line 33, indent: 1, instruction: repeatThisUntilBoardFull()
Line 34, indent: 1, instruction: 
Line 35, indent: 0, instruction: lt()
Line 36, indent: 0, instruction: goToBeginningOfBoard()
Line 37, indent: 0, instruction: rt()
Line 38, indent: 0, instruction: fillThisRowWithEggs()
Line 39, indent: 0, instruction: repeatThisUntilBoardFull()
EOF reached.
creating output...
 ______
/proram/
 ------
 ________________________________
| 関数定義: goToBeginningOfBoard |
 --------------------------------
      _________________________________________
---->| もし 「亀さんが前に進められる」  、次に |
      -----------------------------------------
           _________________________________
---->---->| 関数を呼び出す: 亀さんが前に進む |
           ---------------------------------
           _____________________________________
---->---->| 関数を呼び出す: goToBeginningOfBoard |
           -------------------------------------
      ________________________
---->|  そうでなければ、次に  |
      ------------------------
           ________
---->---->|  戻る  |
           --------
 _______________________________
| 関数定義: fillThisRowWithEggs |
 -------------------------------
      _________________________________________
---->| もし 「亀さんが前に進められる」  、次に |
      -----------------------------------------
           ___________________________________________
---->---->| 関数を呼び出す: 亀さんが自分の下に卵を生む |
           -------------------------------------------
           _________________________________
---->---->| 関数を呼び出す: 亀さんが前に進む |
           ---------------------------------
           ____________________________________
---->---->| 関数を呼び出す: fillThisRowWithEggs |
           ------------------------------------
      ________________________
---->|  そうでなければ、次に  |
      ------------------------
           ___________________________________________
---->---->| 関数を呼び出す: 亀さんが自分の下に卵を生む |
           -------------------------------------------
           ________
---->---->|  戻る  |
           --------
 ____________________________________
| 関数定義: repeatThisUntilBoardFull |
 ------------------------------------
      ________________________________
---->| もし 亀さんの向き＝上   、次に |
      --------------------------------
           ____________________________________
---->---->| 関数を呼び出す: fillThisRowWithEggs |
           ------------------------------------
           ___________________________________
---->---->| 関数を呼び出す: 亀さんが右に曲がる |
           -----------------------------------
           _________________________________
---->---->| 関数を呼び出す: 亀さんが前に進む |
           ---------------------------------
           ___________________________________
---->---->| 関数を呼び出す: 亀さんが右に曲がる |
           -----------------------------------
      ________________________
---->|  そうでなければ、次に  |
      ------------------------
           _____________________________________________________
---->---->| 関数を呼び出す: 亀さんが前に進む 引数： ボードの縦-1 |
           -----------------------------------------------------
           ___________________________________
---->---->| 関数を呼び出す: 亀さんが右に左がる |
           -----------------------------------
           ________________________________
---->---->| もし 亀さんの向き＝右   、次に |
           --------------------------------
                ________________________________________________________
---->---->---->| もし  「亀さんが前に進められる」  そうでなければ、次に |
                --------------------------------------------------------
                     _______________________________
---->---->---->---->| 関数を呼び出す: プログラム終了 |
                     -------------------------------
           _________________________________
---->---->| 関数を呼び出す: 亀さんが前に進む |
           ---------------------------------
           ___________________________________
---->---->| 関数を呼び出す: 亀さんが右に左がる |
           -----------------------------------
      _________________________________________
---->| 関数を呼び出す: repeatThisUntilBoardFull |
      -----------------------------------------
 ___________________________________
| 関数を呼び出す: 亀さんが右に左がる |
 -----------------------------------
 _____________________________________
| 関数を呼び出す: goToBeginningOfBoard |
 -------------------------------------
 ___________________________________
| 関数を呼び出す: 亀さんが右に曲がる |
 -----------------------------------
 ____________________________________
| 関数を呼び出す: fillThisRowWithEggs |
 ------------------------------------
 _________________________________________
| 関数を呼び出す: repeatThisUntilBoardFull |
 -----------------------------------------

